#LIBRARIES
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/extern)

#EIGEN3
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/extern/eigen)

#Cholmod
FIND_PACKAGE(CHOLMOD QUIET)
IF(CHOLMOD_FOUND)
  INCLUDE_DIRECTORIES(${CHOLMOD_INCLUDES})
  MESSAGE(STATUS "Found Cholmod @ ${CHOLMOD_INCLUDES}")
  LIST(APPEND ALL_LIBRARIES ${CHOLMOD_LIBRARIES})
  ADD_DEFINITIONS(-DWITH_CHOLMOD)
ELSE(CHOLMOD_FOUND)
  MESSAGE(WARNING "Cannot find Cholmod, compiling without it!")
ENDIF(CHOLMOD_FOUND)

#TinyVisualizer
FIND_PACKAGE(TinyVisualizer QUIET)
IF(TinyVisualizer_FOUND)
  MESSAGE(STATUS "Found TinyVisualizer @ ${TinyVisualizer_INCLUDE_DIRS}")
  INCLUDE_DIRECTORIES(${TinyVisualizer_INCLUDE_DIRS})
  LIST(APPEND ALL_LIBRARIES ${TinyVisualizer_LIBRARIES})
  ADD_DEFINITIONS(-DWITH_VISUALIZER)
ELSE(TinyVisualizer_FOUND)
  MESSAGE(WARNING "Cannot find TinyVisualizer, compiling without it!")
ENDIF(TinyVisualizer_FOUND)

#Boost: we only use headers
IF(USE_BOOST)
  #QUADMATH
  FIND_PACKAGE(QUADMATH QUIET)
  IF(QUADMATH_FOUND)
    LIST(APPEND ALL_LIBRARIES ${QUADMATH_LIBRARIES})
    MESSAGE(STATUS "Found QUADMATH @ ${QUADMATH_LIBRARIES}")
    ADD_DEFINITIONS(-DWITH_QUADMATH)
  ELSE(QUADMATH_FOUND)
    MESSAGE(WARNING "Cannot find QUADMATH, compiling without it!")
  ENDIF(QUADMATH_FOUND)

  #MPFR
  FIND_PACKAGE(MPFR QUIET REQUIRED)
  IF(MPFR_FOUND)
    MESSAGE(STATUS "Found MPFR @ ${MPFR_INCLUDES}")
    LIST(APPEND ALL_LIBRARIES ${MPFR_LIBRARIES})
    INCLUDE_DIRECTORIES(${MPFR_INCLUDES})
    ADD_DEFINITIONS(-DWITH_MPFR)
  ELSEIF(MPFR_FOUND)
    MESSAGE(WARNING "Cannot find MPFR, compiling without it!")
  ENDIF(MPFR_FOUND)

  #GMP
  FIND_PACKAGE(GMP QUIET REQUIRED)
  IF(GMP_FOUND)
    MESSAGE(STATUS "Found GMP @ ${GMP_INCLUDES}")
    LIST(APPEND ALL_LIBRARIES ${GMP_LIBRARIES})
    INCLUDE_DIRECTORIES(${GMP_INCLUDES})
  ELSEIF(GMP_FOUND)
    MESSAGE(WARNING "Cannot find GMP, 3D meshing not supported!")
  ENDIF(GMP_FOUND)

  #Boost
  IF(MSVC)
    SET(BOOST_ROOT D:/libs/boost_1_76_0)
  ENDIF(MSVC)
  FIND_PACKAGE(Boost QUIET REQUIRED)
  IF(Boost_FOUND)
    INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
  ELSEIF(Boost_FOUND)
    MESSAGE(WARNING "Cannot find boost, multi-precision not support!")
  ENDIF(Boost_FOUND)
ENDIF()

#OpenMP
FIND_PACKAGE(OpenMP)
IF(OPENMP_FOUND)
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
  SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
ENDIF(OPENMP_FOUND)

#NUMA
IF(MSVC)
ELSE(MSVC)
  FIND_PACKAGE(Numa)
  IF(NUMA_FOUND)
    MESSAGE(STATUS "Found Numa @ ${NUMA_INCLUDE_DIRS}")
    LIST(APPEND ALL_LIBRARIES ${NUMA_LIBRARY})
    INCLUDE_DIRECTORIES(${NUMA_INCLUDE_DIRS})
  ELSEIF(NUMA_FOUND)
    MESSAGE(SEND_ERROR "Cannot find numa!")
  ENDIF(NUMA_FOUND)
ENDIF(MSVC)
